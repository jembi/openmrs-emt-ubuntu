#!/bin/bash

EMT_DIR=/usr/local/etc/EmrMonitoringTool

if [ "$1" == "-pushToDHIS" ]; then
	if [ "$#" -ne 1 ]; then
		echo "Illegal number of parameters"
		echo "Usage: openmrs-emt -pushToDHIS"
		echo ""
		exit 1
	fi
	
	bash $EMT_DIR/shell-backend/push-data-to-dhis.sh
	exit 1
elif [ "$1" == "-status" ]; then
	if [ "$#" -ne 1 ]; then
		echo "Illegal number of parameters"
		echo "Usage: openmrs-emt -status"
		echo ""
		exit 1
	fi
	
	EMT_CONFIG_FILES=($(find "$EMT_DIR" -name ".*-emt-config.properties"))
	FINAL_STATUS_MESSAGE=""
	
	for i in "${EMT_CONFIG_FILES[@]}"
	do
		if [ ! -f "$i" ]; then
			echo "$i is missing!!!, this means the tool is installed but messed around with"
			exit 1
		fi
		if [ -f "$i" ]; then
			#TODO increment each openmrs webapp app and complete message as configured, then read the file to get openmrs data directory to check if the .log, .properties and .json files exist and append relevant messages respectively
			#FINAL_STATUS_MESSAGE += ""
			OPENMRS_WEB_APP_NAME=`sed '/^\#/d' "$i" | grep 'openmrs_app_name=' | tail -n 1 | cut -d "=" -f2-`
			OPENMRS_DATA_FOLDER=`sed '/^\#/d' "$i" | grep 'openmrs_data_directory=' | tail -n 1 | cut -d "=" -f2-`
			
			echo "$OPENMRS_WEB_APP_NAME is installed"
			
			if [ ! -d "$OPENMRS_DATA_FOLDER/EmrMonitoringTool" ]; then
				echo "$OPENMRS_DATA_FOLDER/EmrMonitoringTool doesn't currently exist, EMT is installed but not well configured"
			fi
			exit 1
		fi
	done
	exit 1
elif [ "$1" == "-generateLocalReport" ]; then
	if [ "$#" -ne 4 ]; then
		echo "Illegal number of parameters"
		echo "Usage: openmrs-emt -generateLocalReport 20140501 20160131 emt.pdf"
		echo ""
		exit 1
	fi
	
	$EMT_DIR/shell-backend/generate-report.sh $2 $3 $4
	exit 1	
elif [ "$1" == "-copyLocalReportsTo" ]; then
	if [ "$#" -ne 2 ]; then
		echo "Illegal number of parameters"
		echo "Usage: openmrs-emt -copyLocalReportsTo <path/to/directory/to/copy/to>"
		echo ""
		exit 1
	fi
	if [ ! -d "$2" ]; then
		echo "$2 is not a directory or doesn't exist"
		echo ""
		exit 1
	fi
	
	EMT_REPORTS=($(find "$HOME" -name "emtReport_*.pdf"))
	
	for REPORT in "${EMT_REPORTS[@]}"
	do
		cp $REPORT $2
	done
	exit 1
elif [ "$1" == "-reconfigure" ]; then
	if [ "$#" -ne 4 ]; then
		echo "Illegal number of parameters"
		echo "Usage:  openmrs-emt -reconfigure <OpenMRS APPName> <OpenMRS Data Directory> <Tomcat Root URL>"
		echo ""
		echo "Usage example: openmrs-emt -reconfigure openmrs167 ~/.OpenMRS http://localhost:8080"
		echo ""
		exit 1
	fi
	rm $EMT_DIR/."$2"-emt-config.properties
elif [ "$#" -ne 3 ]; then
	echo "Illegal number of parameters"
	echo "Usage:  openmrs-emt <OpenMRS APPName> <OpenMRS Data Directory> <Tomcat Root URL>"
	echo ""
	echo "Usage example: openmrs-emt openmrs167 ~/.OpenMRS http://localhost:8080"
	echo ""
	exit 1
fi

if [ "$1" == "-reconfigure" ]
	then
		OPENMRS_APP_NAME=$2
		OPENMRS_DATA_DIR=$3
		TOMCAT_ROOT_URL=$4
	else
		OPENMRS_APP_NAME=$1
		OPENMRS_DATA_DIR=$2
		TOMCAT_ROOT_URL=$3
fi
OPENMRS_URL=$TOMCAT_ROOT_URL/$OPENMRS_APP_NAME
EMT_MAIN_CONFIG=$EMT_DIR/."$OPENMRS_APP_NAME"-emt-config.properties

if [ ! -d "$EMT_DIR" ]; then
	mkdir $EMT_DIR
fi

if [ ! -f "$EMT_MAIN_CONFIG" ]; then
	echo "Are your DHIS Data elements for each EMT indicators well mapped? (Y/N)"; read DATA_ELEMENTS_CONFIGURED
	
	if [ "$DATA_ELEMENTS_CONFIGURED" != "y" ] && [ "$DATA_ELEMENTS_CONFIGURED" != "Y" ] && [ "$DATA_ELEMENTS_CONFIGURED" != "yes" ] && [ "$DATA_ELEMENTS_CONFIGURED" != "YES" ] && [ "$DATA_ELEMENTS_CONFIGURED" != "Yes" ]; then
		echo "Please manually correct those mappings at: $EMT_DIR/emt-to-dhis-mapping.txt"
		exit 1
	fi
	
	echo ""
	echo "Please enter fosaid or DHIS Organization unit code or Uniquely assigned ID for this server!!!"; read DHIS_ORG_FOSID

	DHIS_ORG_UID=`sed '/^\#/d' "$EMT_DIR/emt-to-dhis-mapping.txt" | grep "$DHIS_ORG_FOSID=" | tail -n 1 | cut -d "=" -f2-`

	if [ "$DHIS_ORG_FOSID" == "" ] || [ "$DHIS_ORG_UID" == "" ]; then
		echo "fosid for this Server is Required to configure this tool (Ask from the tool providers if you are not sure what this is or add a new mapping at $EMT_DIR/emt-to-dhis-mapping.txt)"
		exit 1
	fi

	echo ""
	echo "Enter DHIS Server DataValueSets API URL (eg. http://localhost:8080/dhis/api/dataValueSets): "; read DHIS_URL
	echo "Enter DHIS Server Login UserName : "; read DHIS_USER
	echo "Enter DHIS Server Login Password : "; stty -echo; read DHIS_PASS; stty echo;
	
	if [ "$DHIS_URL" == "" ] || [ "$DHIS_USER" == "" ] || [ "$DHIS_PASS" == "" ]; then
		echo "DHIS URL, UserName and Password can't be empty and therefore DHIS Server configuration has been ignored"
		DHIS_URL=""
		DHIS_USER=""
		DHIS_PASS=""
	fi
	
	echo ""
	echo "Enter OpenMRS Version run by this instance(1.6.7) : "; read OPENMRS_VERSION
	if [ "$OPENMRS_VERSION" == "" ]; then
		OPENMRS_VERSION=1.6.7
	fi
	
	# Read properties from properties file
	# Check runtime properties file exists
	OPENMRS_PROP_FILE="$OPENMRS_DATA_DIR/$OPENMRS_APP_NAME"-runtime.properties
	if [ ! -f "$OPENMRS_PROP_FILE" ]; then
  		echo "The OpenMRS Runtime Properties file for $OPENMRS_APP_NAME does not exist at: $OPENMRS_PROP_FILE!!! Make sure the OpenMRS/EMR Instance you are configuring exists"
  		exit 1
	fi
	DB_USER=`sed '/^\#/d' "$OPENMRS_PROP_FILE" | grep 'connection.username=' | tail -n 1 | cut -d "=" -f2-`
	DB_PASS=$(sed '/^\#/d' "$OPENMRS_PROP_FILE" | grep 'connection.password=' | tail -n 1 | cut -d "=" -f2- | sed 's@\\@@g')
	DB_URL=`sed '/^\#/d' "$OPENMRS_PROP_FILE" | grep 'connection.url=' | tail -n 1 | cut -d "=" -f2-`
	# Extract database name from connection URL
	if [[ "$DB_URL" =~ /([a-zA-Z0-9_\-]+)\? ]]; then
  		DB_NAME=${BASH_REMATCH[1]}
	else
	  DB_NAME="openmrs"
	fi
	OPENMRS_INSTALLED_MODULES_PATH=""
	OPENMRS_INSTALLED_MODULES_FOLDER_NAME=$(mysql -u"$DB_USER" -p"$DB_PASS" "$DB_NAME" -s -N -e "SELECT property_value FROM global_property WHERE property = 'module_repository_folder';")
	echo "modules folder name: $OPENMRS_INSTALLED_MODULES_FOLDER_NAME"
	if [ -d "$OPENMRS_DATA_DIR/$OPENMRS_INSTALLED_MODULES_FOLDER_NAME" ]; then
		OPENMRS_INSTALLED_MODULES_PATH="$OPENMRS_DATA_DIR/$OPENMRS_INSTALLED_MODULES_FOLDER_NAME" 
	fi
	if [ "$OPENMRS_INSTALLED_MODULES_PATH" == "" ]; then
		OPENMRS_INSTALLED_MODULES_PATH="$OPENMRS_DATA_DIR"/modules
	fi
	if [ ! -d "$OPENMRS_INSTALLED_MODULES_PATH" ] && [ -d "$OPENMRS_DATA_DIR/$OPENMRS_APP_NAME"_modules ]; then
		OPENMRS_INSTALLED_MODULES_PATH="$OPENMRS_DATA_DIR/$OPENMRS_APP_NAME"_modules
	fi
	
	cat <<EOF > $EMT_MAIN_CONFIG
openmrs_app_name=$OPENMRS_APP_NAME
openmrs_data_directory=$OPENMRS_DATA_DIR
openmrs_backups_directory=$OPENMRS_DATA_DIR/backups
openmrs_url=$OPENMRS_URL
dhis_url=$DHIS_URL
dhis_user=$DHIS_USER
dhis_pass=$DHIS_PASS
dhis_org_unit_uid=$DHIS_ORG_UID
openmrs_version=$OPENMRS_VERSION
openmrs_installed_modules_path=$OPENMRS_INSTALLED_MODULES_PATH
EOF
	echo ""
	echo "INFO: You can change your provided configurations by editing: $EMT_MAIN_CONFIG";
	echo ""
fi

OMRS_APP_NAME=`sed '/^\#/d' "$EMT_MAIN_CONFIG" | grep 'openmrs_app_name=' | tail -n 1 | cut -d "=" -f2-`
OMRS_DATA_DIR=`sed '/^\#/d' "$EMT_MAIN_CONFIG" | grep 'openmrs_data_directory=' | tail -n 1 | cut -d "=" -f2-`
OMRS_BACKUP_DIR=`sed '/^\#/d' "$EMT_MAIN_CONFIG" | grep 'openmrs_backups_directory=' | tail -n 1 | cut -d "=" -f2-`
OMRS_URL=`sed '/^\#/d' "$EMT_MAIN_CONFIG" | grep 'openmrs_url=' | tail -n 1 | cut -d "=" -f2-`

if [ ! -d "$OMRS_DATA_DIR" ]; then
	echo "ERROR: $OMRS_DATA_DIR must exist to proceed, confirm that it is the right OpenMRS Data Directory/folder"
	exit 1
fi
if [ ! -d "$OMRS_DATA_DIR/EmrMonitoringTool" ]; then
	mkdir $OMRS_DATA_DIR/EmrMonitoringTool
fi
$EMT_DIR/shell-backend/configure.sh $EMT_DIR $OMRS_DATA_DIR
echo "You have successfully installed EMT"

